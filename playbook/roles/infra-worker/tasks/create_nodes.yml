  - set_fact:
      master1_ip: "{{ hostvars[groups['master_nodes'][0]]['ansible_host'] }}"
      master2_ip: "{{ hostvars[groups['master_nodes'][1]]['ansible_host'] }}"
      master3_ip: "{{ hostvars[groups['master_nodes'][2]]['ansible_host'] }}"

  - set_fact:
      worker_hostnames: "{{ worker_hostnames | default([]) }} + [ '{{ cluster_name }}-worker-{{ (ansible_date_time.epoch + item) | to_uuid | truncate(7, True, '') }}' ]"
    with_sequence: count={{ num_worker_nodes }}

  - name: Create worker nodes
    local_action:
      module: cs_instance
      display_name: "{{ item }}"
      template: "Linux CoreOS stable 1298 64-bit 50G Disk (2017-04-01-5bcb70)"
      service_offering: "{{ worker_instance_size }}"
      ssh_key: "{{ ssh_key }}"
      security_groups: [ '{{ worker_security_group_name }}' ]
      user_data: "{{ lookup('template', '../templates/worker_user_data.j2') }}"
      zone: "{{ cluster_zone }}"
    with_items: "{{ worker_hostnames }}"
    register: created_worker_nodes
    when: "'worker_nodes' not in groups or groups['worker_nodes']|length < {{ desired_num_worker_nodes }}"

  - add_host:
      groups: worker_nodes
      name: "{{ item.display_name }}"
      ansible_host: "{{ item.default_ip }}"
      ansible_user: core
      ansible_ssh_private_key_file: "../secret/id_rsa_{{ ssh_key }}"
      ansible_python_interpreter: /home/core/bin/python
    with_items: "{{ created_worker_nodes.results }}"
    when: "'worker_nodes' not in groups or groups['worker_nodes']|length < {{ desired_num_worker_nodes }}"

  - wait_for:
      port: 22
      host: "{{ hostvars[item]['ansible_host'] }}"
      search_regex: OpenSSH
      delay: 10
    with_items: "{{ groups['worker_nodes'] }}"

  - name: Stop worker nodes
    local_action:
      module: cs_instance
      display_name: "{{ item }}"
      state: stopped
    with_items: "{{ groups['worker_nodes'] }}"

  - name: Update worker nodes (increase root disk size)
    cs_volume_ext:
      display_name: "{{ item }}"
      disk_size: "{{ worker_disk_size }}"
    with_items: "{{ groups['worker_nodes'] }}"

  - name: Start worker nodes
    local_action:
      module: cs_instance
      display_name: "{{ item }}"
      state: started
    with_items: "{{ groups['worker_nodes'] }}"
    